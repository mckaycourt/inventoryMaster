extends layout

block content
    link(rel='stylesheet', href='#{location}/stylesheets/item.css')
    body
        .container
            include itemInfo
            form(action='#{location}/printer', method='post' id='form')
                div
                    .row
                        .col-25
                            label(for='icn') ICN:
                        .col-75
                            input#icn(style='background-color: #f2f2f2; border: none; margin-top: 10px;', type='text', name='icn', placeholder='ICN', readonly="readonly", onclick='alert("this is not editable");' value='#{printer.ICN}')
                    .row
                        .col-25
                            label(for='employee') Employee:
                        .col-75
                            select#employee.selectpicker(name='employeeId', placeholder='Employee' onchange="alert(\"You just changed who this was assigned to. Please update the Type.\")")
                                each employee in employees
                                    if(employee.EmployeeID === printer.EmployeeID)
                                        option(value=employee.EmployeeID name='#{employee.FirstName} #{employee.LastName}' selected) #{employee.FirstName} #{employee.LastName}
                                    else
                                        option(value=employee.EmployeeID name='#{employee.FirstName} #{employee.LastName}')  #{employee.FirstName} #{employee.LastName}
                    .row
                        .col-25
                            label(for='make') Make:
                        .col-75
                            select#make.custom-select.sources(name='make', placeholder='Make' onchange='refreshModelOptions()')
                                each makeOption in makeOptions
                                    if(makeOption.Make === printer.Make)
                                        option(value=makeOption.Make selected) #{makeOption.Make}
                                    else
                                        option(value=makeOption.Make) #{makeOption.Make}
                    .row
                        .col-25
                            label(for='model') Model:
                        .col-75
                            select#model.custom-select.sources(name='model', placeholder='Model')
                                each modelOption in modelOptions
                                    if(modelOption.Model === printer.Model)
                                        option(value=modelOption.Model selected) #{modelOption.Model}
                                    else
                                        option(value=modelOption.Model) #{modelOption.Model}
                    .row
                        .col-25
                            label(for='notes') Notes:
                        .col-75
                            textarea#notes(name='notes', placeholder='Write something..', style='height:200px')
                                | #{printer.Notes}
                div
                    .row
                        .col-25
                            label(for='serialNumber') Serial Number:
                        .col-75
                            input#serialNumber(type='text', name='serialNumber', placeholder='Serial Number' value='#{printer.SerialNumber}')
                    .row
                        .col-25
                            label(for='dateAcquired') Date Acquired:
                        .col-75
                            input#dateAcquired(type='date' name='dateAcquired', placeholder='Date Acquired' value='#{printer.DateAcquired}')
                    .row
                        .col-25
                            label(for='warranty') Warranty:
                        .col-75
                            input#warranty(type='date', name='warranty', placeholder='Warranty' value='#{printer.Warranty}')
                    .row
                        .col-25
                            label(for='lesOlsonId') Les Olson ID:
                        .col-75
                            input#lesOlsonId(type='text', name='lesOlsonId', placeholder='Les Olson ID' value='#{printer.LesOlsonID}')
                    .row
                        .col-25
                            label(for='history') History:
                        .col-75
                            textarea#history(name='history' style='height:200px' readonly='readonly') #{printer.History}
    script.
        let icn = "#{printer.ICN}";
        let employee = "#{employee.FirstName} #{employee.LastName}";
        let make = "#{printer.Make}";
        let model = "#{printer.Model}";
        let notes = "#{printer.Notes}";
        let date = new Date();
        let user = '#{user.name}';
        if (user === '') {
            user = '#{user.netId}';
        }
        function goBack() {
            $("#cardInfo").css('display', 'block');
            $("#computerInfo").css('display', 'none');
        }
        function showMain() {
            $("#mainInfo").css('display', 'block');
            $("#otherInfo").css('display', 'none');
            $("#hardwareInfo").css('display', 'none');
            $("#historyInfo").css('display', 'none');

        }
        function showOther() {
            $("#mainInfo").css('display', 'none');
            $("#otherInfo").css('display', 'block');
            $("#hardwareInfo").css('display', 'none');
            $("#historyInfo").css('display', 'none');

        }
        function showHardware() {
            $("#mainInfo").css('display', 'none');
            $("#otherInfo").css('display', 'none');
            $("#hardwareInfo").css('display', 'block');
            $("#historyInfo").css('display', 'none');

        }
        function showHistory() {
            $("#mainInfo").css('display', 'none');
            $("#otherInfo").css('display', 'none');
            $("#hardwareInfo").css('display', 'none');
            $("#historyInfo").css('display', 'block');
        }

        function surplus() {
            $("#employee").val('300');
            alert("You just changed who this was assigned to. Please update the Type.");
        }

        function refreshModelOptions() {
            $.ajax({
                type: "GET",
                url: "#{location}/getModelOptions?make=" + $("#make").val(),
                data: {format: 'html'}
            }).done(function (data) {
                $("#model").html(data);
            });
        }
        function changeEmployee(){
            console.log('changeEMployee');
            let history = $("#history").val();
            $("#history").val(history + date.toDateString() + ' Reassigned from ' + employee + ' to ' + $("#employee option:selected").attr('name') + ' by ' + user + ' \n');
        }
        function changeMake(){
            let history = $("#history").val();
            $("#history").val(history + date.toDateString() + ' Changed from ')
        }
        function go(){
            if(employee !== $("#employee option:selected").attr('name')){
                changeEmployee();
            }
            $("#form").submit();

        }